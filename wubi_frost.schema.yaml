# Rime schema
# encoding: utf-8


# 方案说明
schema:
  schema_id: wubi_frost
  name: 白霜五笔
  version: "2024-02-25"
  author:
    - Dvel
    - gaboolic
  description: |
    白霜拼音
    https://github.com/gaboolic/rime-frost
  dependencies:
    - rime_frost


# 开关
# reset: 默认状态。注释掉后，切换窗口时不会重置到默认状态。
# states: 方案选单显示的名称。可以注释掉，仍可以通过快捷键切换。
# abbrev: 默认的缩写取 states 的第一个字符，abbrev 可自定义一个字符
switches:
  - name: ascii_mode
    states: [ 中, Ａ ]
  - name: ascii_punct  # 中英标点
    states: [ ¥, $ ]
  - name: traditionalization
    states: [ 简, 繁 ]
  - name: emoji
    states: [ 💀, 😄 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: search_single_char  # search.lua 的功能开关，辅码查词时是否单字优先
    abbrev: [词, 单]
    states: [正常, 单字]


# 输入引擎
engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - table_translator
    - lua_translator@*date_translator    # 时间、日期、星期
    - lua_translator@*lunar              # 农历
    - table_translator@custom_phrase    # 自定义短语 custom_phrase.txt
    - lua_translator@*unicode            # Unicode
    - lua_translator@*number_translator  # 数字、金额大写
    - lua_translator@*force_gc           # 暴力 GC
    - lua_translator@*calculator    # 计算器
  filters:
    - lua_filter@*is_in_user_dict # 用户词典的词加上一个*
    - lua_filter@*pin_cand_filter                    # 置顶候选项（顺序要求：置顶候选项 > Emoji > 简繁切换）
    - lua_filter@*reduce_english_filter              # 降低部分英语单词在候选项的位置
    - simplifier@emoji                              # Emoji
    - simplifier@traditionalize                     # 简繁切换
    - uniquifier                                    # 去重


# Lua 配置: 日期、时间、星期、ISO 8601、时间戳的触发关键字
date_translator:
  date: rq       # 日期： 2022-11-29
  time: sj       # 时间： 18:13
  week: xq       # 星期： 星期二
  datetime: dt   # ISO 8601： 2022-11-29T18:13:11+08:00
  timestamp: ts  # 时间戳： 1669716794


# Lua 配置：农历的触发关键字
lunar: nl  # 农历： 二〇二三年冬月二十 癸卯年（兔）冬月二十


# Lua 配置：长词优先
# 提升 count 个词语，插入到第 idx 个位置。
# 示例：将 2 个词插入到第 4、5 个候选项，输入 jie 得到「1接 2解 3姐 4饥饿 5极恶」
long_word_filter:
  count: 2
  idx: 4


# Lua 配置：为 corrector 格式化 comment，占位符为 {comment}
# 默认 "{comment}" 输入 hun dun 时会在「馄饨」旁边生成 hún tun 的 comment
# 例如左右加个括号 "({comment})" 就会变成 (hún tun)
corrector: "{comment}"


# Lua 配置: 降低部分英语单词在候选项的位置。
# 详细介绍 https://dvel.me/posts/make-rime-en-better/#短单词置顶的问题
# 正常情况： 输入 rug 得到 「1.rug 2.如果 …… 」
# 降低之后： 输入 rug 得到 「1.如果 2.rug …… 」
# 几种模式：
# all     降低脚本内置的单词（所有 3~4 位长度、前 2~3 位是完整拼音、最后一位是声母），words 作为自定义的额外补充
# custom  完全自定义，只降低 words 里的
# none    不降低任何单词，相当于没有启用这个 Lua
# （匹配的是编码，不是单词）
reduce_english_filter:
  mode: custom  # all | custom | none
  idx: 2        # 降低到第 idx 个位置
  # 自定义的单词列表，示例列表没有降低部分常用单词，如 and cat mail Mac but bad shit ……
  words: [
    aid, ann,
    bail, bait, bam, band, bans, bat, bay, bend, bent, benz, bib, bid, bien, biz, boc, bop, bos, bud, buf, bach, bench, bush,
    cab, cad, cain, cam, cans, cap, cas, cef, chad, chan, chap, chef, cher, chew, chic, chin, chip, chit, coup, cum, cunt, cur, couch,
    dab, dag, dal, dam, dent, dew, dial, diet, dim, din, dip, dis, dit, doug, dub, dug, dunn, don,
    fab, fax, fob, fog, foul, fur,
    gag, gail, gain, gal, gam, gaol, ged, gel, ger, guam, gus, gut,
    hail, ham, hank, hans, hat, hay, heil, heir, hem, hep, hud, hum, hung, hunk, hut, hush,
    jim, jug,
    kat,
    lab, lad, lag, laid, lam, laos, lap, lat, lax, lay, led, leg, lex, liam, lib, lid, lied, lien, lies, linn, lip, lit, liz, lob, lug, lund, lung, lux, lash, loch, lush,
    mag, maid, mann, mar, mat, med, mel, mend, mens, ment, mil, mins, mint, mob, moc, mop, mos, mot, mud, mug, mum, mesh,
    nap, nat, nay, neil, nib, nip, noun, nous, nun, nut, nail, nash,
    pac, paid, pail, pain, pair, pak, pal, pam, pans, pant, pap, par, pat, paw, pax, pens, pic, pier, pies, pins, pint, pit, pix, pod, pop, pos, pot, pour, pow, pub, pinch, pouch,
    rand, rant, rent, rep, res, ret, rex, rib, rid, rig, rim, rub, rug, rum, runc, runs, ranch,
    sac, sail, sal, sam, sans, sap, saw, sax, sew, sham, shaw, shin, sig, sin, sip, sis, suit, sung, suns, sup, sur, sus,
    tad, tail, taj, tar, tax, tec, ted, tel, ter, tex, tic, tied, tier, ties, tim, tin, tit, tour, tout, tum,
    wag, wand, womens, wap, wax, weir, won,
    yan, yen,
    zach
  ]


# Lua 配置: 置顶候选项
# 注释太长了，请参考 pin_cand_filter.lua 开头的说明书。
pin_cand_filter:
  # 格式：编码<Tab>字词1<Space>字词2……
  # ⚙️ 以下是个人习惯，仅供参考，推荐打补丁用自己的习惯覆盖。
  # 单编码
  # - q	去 千
  # - w	我 万 往
  # - e	呃
  # - r	让 人
  # - t	他 她 它 祂
  # - y	与 于
  # - u 在 custom_phrase 置顶了 有 🈶 又 由
  # - i 在 custom_phrase 置顶了 一 以 已 亦
  # - o	哦
  # - p	片 篇
  # - a	啊
  # - s	是 时 使 式
  # - d	的 地 得
  # - f	发 放 分
  # - g	个 各
  # - h	和 或
  # - j	及 将 即 既 继
  # - k	可
  # - l	了 啦 喽 嘞
  # - z	在 再 自
  # - x	想 像 向
  # - c	才 从
  # - v
  # - b	吧 把 呗 百
  # - n	那 哪 拿 呐
  # - m	吗 嘛 呣 呒
  # 常用单字
  # - qing	请
  # - qu	去
  # - wo	我
  # - wei	为
  # - er	而 儿 二
  # - en	嗯
  # - rang	让
  # - ta	他 她 它 祂
  # - tai	太
  # - tong	同
  # - yu	与 于
  # - you	有 又 由
  # - yao	要
  # - ye	也
  # - shi	是 时 使 式
  # - suo	所
  # - shang	上
  # - shuo	说
  # - de	的 地 得
  # - dan	但
  # - dou	都
  # - dao	到 倒
  # - dian	点
  # - dang	当
  # - dui	对
  # - fa	发
  # - ge	个 各
  # - gang	刚
  # - he	和
  # - huo	或
  # - hui	会
  # - hai	还
  # - hao	好
  # - ji	及 即 既
  # - jiu	就
  # - jiang	将
  # - ke	可
  # - kan	看
  # - kai	开
  # - le	了
  # - la	啦 拉
  # - lai	来
  # - li	里
  # - zai	在 再
  # - zhi	只
  # - zhe	这 着
  # - zhen	真
  # - zui	最
  # - zheng	正
  # - zuo	做 坐 左
  # - ze	则
  # - xiang	想 像 向
  # - xian	先
  # - xia	下
  # - xing	行
  # - cai	才
  # - cong	从
  # - chu	出
  # - ba	把 吧
  # - bu	不
  # - bing	并
  # - bei	被
  # - bie	别
  # - bi	比
  # - bing	并
  # - na	那 哪 拿 呐
  # - ni	你
  # - ma	吗 嘛 妈
  # - mei	没
  # - mai	买 卖
  # - reng	仍 扔
  # ta、na
  # - ta men	他们 她们 它们
  # - tm	他们 她们 它们
  # - ta de	他的 她的 它的
  # - td	他的 她的 它的
  # - ta men de	他们的 她们的 它们的
  # - na er	那儿 哪儿
  # - na ge	那个 哪个
  # - ng	那个 哪个 拿个
  # - na xie	那些 哪些
  # - na li	那里 哪里
  # - na bian	那边 哪边
  # - na bian er	那边儿 哪边儿
  # - na wei	那位 哪位
  # 简码
  # - zh	这
  # - dd	等等
  # - dddd	等等等等
  # - gg	刚刚
  # - cgg	才刚刚
  # - zd	知道
  # - bzd	不知道
  # - ww	往往
  # - hh	哈哈
  # - kk	看看
  # - cc	常常
  # - xx	想想 想象
  # - yw	因为
  # - sm	什么
  # - wsm	为什么
  # - sbs	是不是
  # - msm	没什么
  # - smd	什么的
  # - sms	什么是
  # - sma	什么啊


# 主翻译器，拼音
translator:
  dictionary: wubi_frost        # 挂载词库 rime_frost.dict.yaml
  enable_charset_filter: true           # 开启字符集过滤
  enable_completion: true               # 提前显示编码未输入完整的词条

  # 开启自动造词相关设置，将下面四项都改为 true
  enable_sentence: false                # 句子输入模式
  enable_user_dict: false               # 是否开启用户词典（用户词典记录动态字词频，用户词）
  enable_encoder: false                 # 自动造词
  encode_commit_history: false          # 是否对已上屏的词自动造词

  max_phrase_length: 10                 # 自动生成词的最大长度
  user_dict: user                       # 用户词典名
  db_class: tabledb                     # 用户词典类型 userdb - 二进制 / tabledb - 人类语言
  disable_user_dict_for_patterns:       # 不需要录入用户词典的编码
    - "^z.*$"

# 输入的编码同时进行拼音反查，实现五笔与拼音的混输
abc_segmentor:
  extra_tags:
    - reverse_lookup

reverse_lookup:
  dictionary: rime_frost
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/



# 自定义短语：custom_phrase.txt
custom_phrase:
  dictionary: ""
  user_dict: custom_phrase  # 可以修改这里，改成自己的 txt 文件
  db_class: stabledb        # 只读数据库，无法动态调频；设为 tabledb 可以动态调频
  enable_completion: false  # 补全提示
  enable_sentence: false    # 禁止造句
  initial_quality: 99       # custom_phrase 的权重应该比 pinyin 和 melt_eng 大


# Emoji
emoji:
  option_name: emoji
  opencc_config: emoji.json
  inherit_comment: false  # 在 corrector.lua 及反查中，emoji 返回空注释


# 简繁切换
traditionalize:
  option_name: traditionalization
  opencc_config: s2t.json  # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: none               # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  tags: [ abc, number, gregorian_to_lunar ]  # 限制在对应 tag，不对其他如反查的内容做简繁转换


# 标点符号
# punctuator 下面有三个子项：
#   full_shape 全角标点映射
#   half_shape 半角标点映射
#   symbols    Rime 的预设配置是以 '/' 前缀开头输出一系列字符，自定义的 symbols_v.yaml 修改成了 'v' 开头。
punctuator:
  full_shape:
    __include: default:/punctuator/full_shape  # 从 default.yaml 导入配置
  half_shape:
    __include: default:/punctuator/half_shape  # 从 default.yaml 导入配置
  symbols:
    __include: symbols_v:/symbols              # 从 symbols_v.yaml 导入配置


# 处理符合特定规则的输入码，如网址、反查
recognizer:
  import_preset: default  # 从 default.yaml 继承通用的
  patterns:  # 再增加方案专有的：
    punct: "^/([0-9]|10|[A-Za-z]+)$"    # 响应 symbols_v.yaml 的 symbols，用 'v' 替换 '/'
    unicode: "^U[a-f0-9]+"              # 脚本将自动获取第 2 个字符 U 作为触发前缀，响应 lua_translator@*unicode，输出 Unicode 字符
    number: "^R[0-9]+[.]?[0-9]*"        # 脚本将自动获取第 2 个字符 R 作为触发前缀，响应 lua_translator@*number_translator，数字金额大写
    gregorian_to_lunar: "^N[0-9]{1,8}"  # 脚本将自动获取第 2 个字符 N 作为触发前缀，响应 lua_translator@*lunar，公历转农历，输入 N20240115 得到「二〇二三年腊月初五」
    calculator: "^V.*$"                 #计算器功能引导

# 从 default 继承快捷键
key_binder:
  import_preset: default  # 从 default.yaml 继承通用的
  aux_code_trigger: "`"   # 辅码引导符，要添加到 speller/alphabet
  # bindings:             # 也可以再增加方案专有的快捷键


# 拼写设定
speller:

